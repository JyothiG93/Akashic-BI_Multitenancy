apiVersion: v1
kind: Pod
metadata:
  name: {{ .Values.pod.name | quote }}
  namespace: {{ .Values.namespace.name | quote }}
  labels: 
     app: database-engine
spec:
  restartPolicy: {{ .Values.pod.restartPolicy | quote }}
  initContainers:
  - name: database-redis-check
    image: busybox:1.28
    command: [ "/bin/sh", "-c", "until nc -zv tenant1-database-redis-service.tenant1.svc.cluster.local
   5432 -w1 ; do echo 'waiting for db' ; sleep1 ; done" ]
  containers:
  - name: {{ .Values.superset_workercontainer.name | quote }}
    image: {{ .Values.superset_workercontainer.image | quote }}
    imagePullPolicy: {{.Values.superset_workercontainer.imagePullPolicy | quote }}
    securityContext:
      runAsUser: 0
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    livenessProbe:
      exec:
      # -- Liveness probe command
      # @default -- a `celery inspect ping` command
        command:
        - sh
        - -c
        - celery -A superset.tasks.celery_app:app inspect ping -d celery@$HOSTNAME
      initialDelaySeconds: 30
      timeoutSeconds: 60
    env:
      - name: POSTGRES_DB
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: postgres-db
      - name: POSTGRES_USER
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: postgres-user
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: postgres-password
{{- range $key, $value := .Values.configMapdata.app }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
      - name: DATABASE_HOST
        value: tenant1-database-redis-service.tenant1.svc.cluster.local
      - name: DATABASE_PORT
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: db-port
      - name: DATABASE_DIALECT
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: dialect
      - name: DATABASE_USER
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: db-user
      - name: DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: db-password
      - name: DATABASE_DB
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: database-db
      - name: EXAMPLES_HOST
        value: tenant1-database-redis-service.tenant1.svc.cluster.local
      - name: EXAMPLES_PORT
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: example-port
      - name: EXAMPLES_USER
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: example-user
      - name: EXAMPLES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: example-password
      - name: EXAMPLES_DB
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: example-db
      - name: REDIS_HOST
        value: tenant1-database-redis-service.tenant1.svc.cluster.local
      - name: REDIS_PORT  
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: redis-port
      - name: REDIS_USER
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: redis-user
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: redis-password
      - name: SUPERSET_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: app-secretkey
      - name: SUPERSET_PORT
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secretcredname | quote }}
            key: superset-port
    volumeMounts:
      - name: superset-home
        mountPath: /app/superset_home
      - name: worker-volume
        mountPath: /app/docker
      - name: worker-config-volume
        mountPath: /app/pythonpath
  imagePullSecrets:
  - name: {{ .Values.ecrsecretname | quote }}
  volumes:
    - name: superset-home
      persistentVolumeClaim:
        claimName: {{ .Values.pvc.name | quote }}
    - name: worker-volume
      configMap:
        name: {{ .Values.file1configmap | quote }} 
        defaultMode: 0777
    - name: worker-config-volume
      configMap:
        name: {{ .Values.file2configmap | quote }} 
        defaultMode: 0777